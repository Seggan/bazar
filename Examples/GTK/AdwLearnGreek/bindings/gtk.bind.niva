Project loadPackages: {"io.github.jwharm.javagi:gtk:0.9.0" "io.github.jwharm.javagi:adw:0.9.0"}

// button css
// destructive-action
// suggested-action

Bind package: "org.gnome.gtk" content: [
  type Application

  type Bitset // TODO
  type SelectionModel // TODO
 
  extend SelectionModel [
    on onActivate::[ -> ] -> Unit
    on run::List::String -> Unit
  ] 
 
  enum Orientation = HORIZONTAL | VERTICAL 
  
  union Window = 
  | ApplicationWindow app: Application
  
  /// WIDGETS
  union Widget = 
  | ^Window
  | Button
  | ToggleButton
  | Entry 
  | Label str: String
  | Box orientation: Orientation spacing: Int
  | Grid
  | Stack
  | Viewport 

  @emit: """org.gnome.gtk.Application($1, org.gnome.gio.ApplicationFlags.DEFAULT_FLAGS)"""
  constructor Application name::String -> Application

  extend Application [
    on onActivate::[ -> ] -> Unit
    on run::List::String -> Unit
  ]
  

  enum Align = FILL | START | END | CENTER | BASELINE_FILL | BASELINE_CENTER
  enum PositionType = LEFT | RIGHT | TOP | BOTTOM
  enum StackTransitionType = NONE | CROSSFADE | SLIDE_RIGHT | SLIDE_LEFT | SLIDE_UP | SLIDE_DOWN | SLIDE_LEFT_RIGHT | SLIDE_UP_DOWN | OVER_UP | OVER_DOWN | OVER_LEFT | OVER_RIGHT | UNDER_UP | UNDER_DOWN  | ROTATE_LEFT | ROTATE_RIGHT | ROTATE_LEFT_RIGHT

  // EVENTS
  enum ModifierType = ALT_MASK | SHIFT_MASK | CONTROL_MASK | BUTTON1_MASK
  union EventController = 
  | EventControllerKey

  EventControllerKey onKeyPressed::[Int, Int, ModifierType? -> Boolean] -> Unit


  // Widget
  Widget grabFocus -> Boolean
  Widget addCssClass::String -> Unit
  Widget removeCssClass::String -> Unit 

  // ApplicationWindow
  extend ApplicationWindow [
    @emit: "$0.setDefaultSize($1, $2)"
    on x::Int y::Int -> Unit
    on present -> Unit
    on addController::EventController -> Unit
  ]

  // Button
  constructor Button withLabel::String -> Button
  constructor Button fromIconName::String -> Button
  Button onClicked::[ -> ] -> Unit
  
  // ToggleButton
  constructor ToggleButton withLabel::String -> ToggleButton
  ToggleButton onToggled::[ -> ] -> Unit

  // Box
  Box append::Widget -> Unit

  // Grid
  @rename: "attach"
  Grid attach::Widget col::Int row::Int w::Int h::Int -> Unit

  @rename: "attachNextTo"
  Grid attach::Widget nextTo::Widget position::PositionType w::Int h::Int -> Unit

  // File dialog
  type FileDialog
  type Cancellable
  type AsyncResult
  type MemoryRegion
  Cancellable onCancelled::[ -> ] -> Unit

  @rename: "open"
  FileDialog 
    openInside::Window 
    ifCancelled::Cancellable? 
    whenReadyDo::[Any, AsyncResult, MemoryRegion] -> Unit
  FileDialog openFinish::AsyncResult -> File

  // Stack
  Stack addChild::Widget -> Unit
  Stack add::Widget named::String -> Unit
  @rename: "addTitled"
  Stack add::Widget named::String titled::String -> Unit
  Stack getChildByName::String -> Widget
  Stack remove::Widget -> Unit



] fields: [
  Widget
    halign: Align
    valign: Align
    vexpand: Boolean
    hexpand: Boolean 
    // heightRequest: Int // https://github.com/jwharm/java-gi/issues/97
    tooltipText: String
    // cssNames: Array::String // arrays needed, add when get static builders
    marginStart: Int
    marginEnd: Int
    marginTop: Int
    marginBottom: Int
    sensitive: Boolean
    
  SelectionModel 
    selection: Bitset

  Label 
    text: String 

  Entry 
    text: String 
    textLength: Int 
    placeholderText: String 
    editable: Boolean
    wrap: Boolean
    alignment: Float
    maxWidthChars: Int
  
  Button 
    label: String
    iconName: String
  ToggleButton 
    label: String
    iconName: String
    active: Boolean
    group: ToggleButton

  ApplicationWindow
    child: Widget
    title: String

  Grid 
    columnSpacing: Int
    columnHomogeneous: Boolean
    rowSpacing: Int
    rowHomogeneous: Boolean
  Stack 
    hhomogeneous: Boolean
    interpolateSize: Boolean
    pages: SelectionModel
    transitionDuration: Int
    transitionRunning: Boolean
    transitionType: StackTransitionType
    vhomogeneous: Boolean
    visibleChild: Widget
    visibleChildName: String
  
  Viewport
    child: Widget
] 

Bind package: "org.gnome.gio" content: [
  type File
  File getPath -> String
  constructor File newForPath::String -> File
  constructor File newForUri::String -> File
]


Bind package: "org.gnome.adw" content: [
  type Application
  extend Application [
    on onActivate::[ -> ] -> Unit
    on run::List::String -> Unit
  ]

  @emit: """org.gnome.adw.Application($1, org.gnome.gio.ApplicationFlags.DEFAULT_FLAGS)"""
  constructor Application name::String -> Application

  // https://gnome.pages.gitlab.gnome.org/libadwaita/doc/1.5/boxed-lists.html
  union AdwRow = 
  | ActionRow
  | ExpanderRow
  | EntryRow
  | PasswordRow
  | ComboRow
  | SpinRow
  | SwitchRow

  union org.gnome.gtk.Window = 
  | ApplicationWindow app: Application

  union org.gnome.gtk.Widget = 
  | ^AdwRow
  | HeaderBar
  | PreferencesPage
  | PreferencesGroup
  | ToolbarView
  // Tabs
  | TabBar
  | TabView
  | TabPage
  | TabOverview
  // Navigation
  | NavigationView
  | NavigationPage child: Widget name: String
  | Carousel
  | CarouselIndicatorLines
  | CarouselIndicatorDots

  // params for carousel
  type SpringParams mass: Double stiffness: Double damping: Double

  // ApplicationWindow
  extend ApplicationWindow [
    @emit: "$0.setDefaultSize($1, $2)"
    on x::Int y::Int -> Unit
    on present -> Unit
    on addController::EventController -> Unit
  ]

  extend HeaderBar [
    on packEnd::Widget -> Unit
    on packStart::Widget -> Unit
  ]

  extend AdwRow [
    on addPrefix::Widget -> Unit
    on addSuffix::Widget -> Unit
    on remove::Widget -> Unit
  ]
  extend EntryRow [
    on onApply::[ -> ] -> Unit
  ]
  

  extend ExpanderRow [
    on addRow::Widget -> Unit
  ]

  extend ActionRow [
    on activate -> Unit
    on remove::Widget -> Unit
  ]

  extend PreferencesPage [
    on add::PreferencesGroup -> Unit
  ]

  // PreferencesGroup
  extend PreferencesGroup [
    on add::Widget -> Unit
    on remove::Widget -> Unit
  ]

  // ToolbarView
  extend ToolbarView [
    on addTopBar::Widget -> Unit
  ]

  // TabView
  extend TabView [
    @rename: "add"
    on add::Widget onPage::TabPage -> TabPage
    on append::Widget -> TabPage
    on prepend::Widget -> TabPage
    on appendPinned::Widget -> TabPage
    on closeOtherPages::TabPage -> Unit
    on closePage::TabPage -> Unit

    @rename: "closePageFinish"
    on closeFinish::TabPage confirm::Boolean -> Unit

    on getNPages::TabView -> Int
    on getNPinnedPages::TabView -> Int
    on getNthPage::Int -> TabPage
    on getPage::Widget -> TabPage

    // signls
    on onClosePage::[TabPage -> Boolean] -> Unit
    on onCreateWindow::[ -> TabView] -> Unit

    on onPageAttached::[ TabPage, Int -> ] -> Unit
    on onPageDetached::[ TabPage, Int -> ] -> Unit
    on onPageReordered::[ TabPage, Int -> ] -> Unit
    on onIndicatorActivated::[ TabPage -> ] -> Unit
  ]
  
  extend TabOverview [ 
    on onCreateTab::[ -> TabPage] -> Unit
  ]

  // NavigationView
  extend NavigationView [
    on add::NavigationPage -> Unit
    on remove::NavigationPage -> Unit
    on push::NavigationPage -> Unit
    on pop -> NavigationPage
    @rename: "pushByTag"
    on pushByTag::NavigationPage -> Boolean
    @rename: "popToTag"
    on popToTag::NavigationPage -> Boolean
    on getVisiblePage -> NavigationPage
    on getPreviousPage -> NavigationPage
    @rename: "replace"
    on replacePages::MutableList::NavigationPage n_pages::Int -> Unit
  ]

  // NavigationPage
  extend NavigationPage [
    on onHidden::[ NavigationPage -> ] -> Unit
    on onHiding::[ NavigationPage -> ] -> Unit
    on onShowing::[ NavigationPage -> ] -> Unit
    on onShown::[ NavigationPage -> ] -> Unit 
  ]

  extend Carousel [
    on append::Widget -> Unit
    on prepend::Widget -> Unit
    on remove::Widget -> Unit

    @rename: "scrollTo"
    on scrollTo::Widget withAnimation::Boolean -> Unit
    on getNthPage::Int -> Widget
    on getNPages -> Int
    on getPosition -> Double

    on onPageChanged::[ Int -> ] -> Unit    
  ]
  

] fields: [

  Carousel
    interactive: Boolean
    scrollParams: SpringParams
    revealDuration: Int
    spacing: Int

    allowMouseDrag: Boolean
    allowLongSwipes: Boolean
    allowScrollWheel: Boolean

  CarouselIndicatorLines
    carousel: Carousel
  
  CarouselIndicatorDots
    carousel: Carousel

  ToolbarView
    content: Widget

  HeaderBar
    titleWidget: Widget
  
  ApplicationWindow
    content: Widget
    title: String

  AdwRow // PreferencesRow
    child: Widget
    selectable: Boolean
    title: String
  EntryRow
    showApplyButton: Boolean
    textLength: Int
    text: String
    widthChars: Int
    maxWidthChars: Int
    activatesDefault: Boolean // Whether activating the embedded entry can activate the default widget
    // inputHints: InputHints // TODO
    // inputPurpose: InputPurpose // TODO
  ActionRow
    subtitle: String
    titleLines: Int

  ExpanderRow
    expanded: Boolean
    enableExpansion: Boolean

  PreferencesPage
    description: String

  PreferencesGroup 
    headerSuffix: Widget
    title: String

  TabOverview
    child: Widget
    enableNewTab: Boolean
    enableSearch: Boolean
    extraDragPreload: Boolean
    searchActive: Boolean
    view: TabView
    open: Boolean


  // Tabs
  TabView
    altohide: Boolean
    pages: SelectionModel
    nPages: Int
    nPinnedPages: Int
    tabsRevealed: Boolean // getter
    expandTabs: Boolean
    
  TabPage 
    parent: Widget
    selected: Boolean
    loading: Boolean
    keyword: String // for search
    liveThumbnail: Boolean // in odverview
    title: String

  TabBar
    autohide: Boolean
    view: TabView

  NavigationView
    animateTransition: Boolean
    visiblePage: NavigationPage

  NavigationPage
    child: Widget
    canPop: Boolean
    tag: String
    title: String

]