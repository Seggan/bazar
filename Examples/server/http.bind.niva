Project loadPackages: {
    "org.http4k:http4k-bom:5.26.1.0"
    "org.http4k:http4k-core:5.26.1.0"
    "org.http4k:http4k-format-jackson:5.26.1.0"
    "org.http4k:http4k-client-okhttp:5.26.1.0" 
}

Bind package: "org.http4k.server" imports: {"org.http4k.filter.DebuggingFilters.PrintResponse" "org.http4k.filter.DebuggingFilters.PrintRequestAndResponse" "org.http4k.filter.DebuggingFilters.PrintRequest"}
content: [
    union ServerConfig port: Int =
    | SunHttp

    type Http4kServer
    Http4kServer start -> Http4kServer
]

 
Bind package: "org.http4k.core" content: [
    enum Status = OK | CREATED | ACCEPTED | NO_CONTENT | FOUND | BAD_REQUEST | NOT_FOUND
    enum Method = GET | POST | PUT | DELETE | OPTIONS | TRACE | PATCH | PURGE | HEAD

    type Request method: Method uri: String

    Request query::String -> String
    @rename: "query"
    Request query::String value::String -> String

    type Response status: Status
    Response body::String -> Response

    type HttpHandler = [Request -> Response]
    HttpHandler asServer: config::ServerConfig -> Http4kServer
]

Bind package: "org.http4k.client" content: [

    type JavaHttpClient = HttpHandler // strange but it is
    @emit: "JavaHttpClient()"
    constructor JavaHttpClient new -> HttpHandler
]
Bind package: "org.http4k.filter" content: [
    type Filter = [HttpHandler -> HttpHandler]
    Filter then: next::HttpHandler -> HttpHandler

    union DebuggingFilters = 
    | PrintRequest
    | PrintResponse
    | PrintRequestAndResponse

    // its because PrintResponse is object with invoke op that returns Filter
    constructor DebuggingFilters new -> Filter
]

