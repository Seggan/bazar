// String readLines -> List::String =  
//   FileSystem read: this toPath |> split: "\n"

// String isNotEmpty = this count != 0

// type Pair a: T b: G

// days = "weather.txt" readLines
//   filter: [it isNotEmpty] |> 
//   map: [it split: ":"] |>
//   filter: [it isNotEmpty] |>
//   map: [Pair a: it first trim b: it last trim toFloat] |>
//   sortedBy: [it b] |> 
//   drop: 1 |> dropLast: 1
// result = days
//   inject: 0.0
//   into: [acc, day -> acc + day b] |>
//   / days count toFloat
 
// result echo

// {1 2 3} map: [it + 1] |> echo

1.1 + 1.2