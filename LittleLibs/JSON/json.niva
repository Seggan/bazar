union JsonObj =
| JsonArray arr: MutableList::JsonObj
| JsonNumber num: Double
| JsonString str: String
| JsonFields fld: MutableMap(String, JsonObj)

JsonObj toJson -> String = | this 
| JsonArray => this arrToJson
| JsonNumber => num toString
| JsonString => str packForJson 
| JsonFields => this fieldToJson


JsonArray arrToJson -> String = [

  createArr = [
    b = StringBuilder new
    arr forEachIndexed: [ i, it ->
      b append: it toJson 
      i + 1 != arr count => b append: ", "
    ]
    b toString
  ]

  ^createArr do surroundWith: "[ " and: " ]" 
]

JsonFields fieldToJson -> String = [

  createObj = [
    b = StringBuilder new
    mut i = 0
    fld forEach: [ k, v ->

      b append: k packForJson |>
        append: ": " |>
        append: v toJson 
      i + 1 != fld count => b append: ", "

      i <- i inc
    ]
    b toString
  ]

  ^createObj do surroundWith: "{ " and: " }" 
]

// jsonNum = JsonNumber num: 5.0
// jsonStr = JsonString str: "t'e'x't"
// jsonFields = JsonFields fld: #{"a\ng'e" jsonNum}

// arr = JsonArray arr: {jsonNum jsonNum jsonStr jsonFields}
// arr toJson echo 

